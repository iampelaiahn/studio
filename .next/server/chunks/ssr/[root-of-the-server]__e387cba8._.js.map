{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.5-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/suggest-icing-flavor-combinations.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview Suggests icing flavor combinations based on custom order details.\n *\n * - suggestIcingFlavorCombinations - A function that suggests icing flavor combinations.\n * - SuggestIcingFlavorCombinationsInput - The input type for the suggestIcingFlavorCombinations function.\n * - SuggestIcingFlavorCombinationsOutput - The return type for the suggestIcingFlavorCombinations function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst SuggestIcingFlavorCombinationsInputSchema = z.object({\n  productType: z\n    .string()\n    .describe('The type of product, e.g., cake, cupcakes, etc.'),\n  desiredFlavor: z.string().describe('The desired flavor profile, e.g., sweet, fruity, chocolatey.'),\n});\nexport type SuggestIcingFlavorCombinationsInput = z.infer<\n  typeof SuggestIcingFlavorCombinationsInputSchema\n>;\n\nconst SuggestIcingFlavorCombinationsOutputSchema = z.object({\n  suggestedCombinations: z\n    .array(z.string())\n    .describe('An array of suggested icing flavor combinations.'),\n});\nexport type SuggestIcingFlavorCombinationsOutput = z.infer<\n  typeof SuggestIcingFlavorCombinationsOutputSchema\n>;\n\nexport async function suggestIcingFlavorCombinations(\n  input: SuggestIcingFlavorCombinationsInput\n): Promise<SuggestIcingFlavorCombinationsOutput> {\n  return suggestIcingFlavorCombinationsFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'suggestIcingFlavorCombinationsPrompt',\n  input: {schema: SuggestIcingFlavorCombinationsInputSchema},\n  output: {schema: SuggestIcingFlavorCombinationsOutputSchema},\n  prompt: `You are a pastry chef specializing in creating unique icing flavor combinations.\n\n  Based on the customer's custom order details, suggest icing flavor combinations that would complement the product and desired flavor profile.\n\n  Product Type: {{{productType}}}\n  Desired Flavor: {{{desiredFlavor}}}\n\n  Suggest at least 3 flavor combinations.\n  `,\n});\n\nconst suggestIcingFlavorCombinationsFlow = ai.defineFlow(\n  {\n    name: 'suggestIcingFlavorCombinationsFlow',\n    inputSchema: SuggestIcingFlavorCombinationsInputSchema,\n    outputSchema: SuggestIcingFlavorCombinationsOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,4CAA4C,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzD,aAAa,uIAAA,CAAA,IAAC,CACX,MAAM,GACN,QAAQ,CAAC;IACZ,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACrC;AAKA,MAAM,6CAA6C,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1D,uBAAuB,uIAAA,CAAA,IAAC,CACrB,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IACd,QAAQ,CAAC;AACd;AAKO,eAAe,+BACpB,KAA0C;IAE1C,OAAO,mCAAmC;AAC5C;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAyC;IACzD,QAAQ;QAAC,QAAQ;IAA0C;IAC3D,QAAQ,CAAC;;;;;;;;EAQT,CAAC;AACH;AAEA,MAAM,qCAAqC,mHAAA,CAAA,KAAE,CAAC,UAAU,CACtD;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IA9BoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 310, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/custom-order/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { suggestIcingFlavorCombinations, SuggestIcingFlavorCombinationsInput } from \"@/ai/flows/suggest-icing-flavor-combinations\";\nimport { z } from \"zod\";\n\nconst actionInputSchema = z.object({\n  productType: z.string().min(1, \"Product type is required.\"),\n  desiredFlavor: z.string().min(1, \"Desired flavor is required.\"),\n});\n\ntype SuggestionsResult = {\n  suggestions?: string[];\n  error?: string;\n};\n\nexport async function getIcingSuggestions(input: SuggestIcingFlavorCombinationsInput): Promise<SuggestionsResult> {\n    const parsedInput = actionInputSchema.safeParse(input);\n    if (!parsedInput.success) {\n        const issues = parsedInput.error.issues.map(i => i.message).join(' ');\n        return { error: `Invalid input: ${issues}` };\n    }\n    \n    try {\n        const result = await suggestIcingFlavorCombinations(parsedInput.data);\n        if (!result.suggestedCombinations || result.suggestedCombinations.length === 0) {\n            return { error: \"No suggestions could be generated. Please try a different flavor.\" };\n        }\n        return { suggestions: result.suggestedCombinations };\n    } catch (e) {\n        console.error(\"AI Error:\", e);\n        return { error: \"Failed to get suggestions from AI. Please try again.\" };\n    }\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;;;;AAEA,MAAM,oBAAoB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjC,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC/B,eAAe,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AACnC;AAOO,eAAe,oBAAoB,KAA0C;IAChF,MAAM,cAAc,kBAAkB,SAAS,CAAC;IAChD,IAAI,CAAC,YAAY,OAAO,EAAE;QACtB,MAAM,SAAS,YAAY,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA,IAAK,EAAE,OAAO,EAAE,IAAI,CAAC;QACjE,OAAO;YAAE,OAAO,CAAC,eAAe,EAAE,QAAQ;QAAC;IAC/C;IAEA,IAAI;QACA,MAAM,SAAS,MAAM,CAAA,GAAA,gKAAA,CAAA,iCAA8B,AAAD,EAAE,YAAY,IAAI;QACpE,IAAI,CAAC,OAAO,qBAAqB,IAAI,OAAO,qBAAqB,CAAC,MAAM,KAAK,GAAG;YAC5E,OAAO;gBAAE,OAAO;YAAoE;QACxF;QACA,OAAO;YAAE,aAAa,OAAO,qBAAqB;QAAC;IACvD,EAAE,OAAO,GAAG;QACR,QAAQ,KAAK,CAAC,aAAa;QAC3B,OAAO;YAAE,OAAO;QAAuD;IAC3E;AACJ;;;IAjBsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/custom-order/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getIcingSuggestions as '405e3a30fa16409e62049273af6fd081abef195b10'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 414, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/custom-order/_components/custom-order-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/custom-order/_components/custom-order-form.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/custom-order/_components/custom-order-form.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0T,GACvV,wFACA","debugId":null}},
    {"offset": {"line": 428, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/custom-order/_components/custom-order-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/custom-order/_components/custom-order-form.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/custom-order/_components/custom-order-form.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsS,GACnU,oEACA","debugId":null}},
    {"offset": {"line": 442, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 452, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/custom-order/page.tsx"],"sourcesContent":["import CustomOrderForm from './_components/custom-order-form';\n\nexport default function CustomOrderPage() {\n  return (\n    <div className=\"container mx-auto max-w-3xl py-12 px-4 sm:px-6 lg:px-8\">\n      <header className=\"text-center mb-12\">\n        <h1 className=\"text-4xl md:text-5xl font-headline text-balance\">Create Your Dream Treat</h1>\n        <p className=\"mt-3 text-lg text-muted-foreground max-w-2xl mx-auto text-balance\">\n          Fill out the form below with your ideas, and we'll get back to you to finalize the delicious details.\n        </p>\n      </header>\n      <main>\n        <CustomOrderForm />\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAO,WAAU;;kCAChB,8OAAC;wBAAG,WAAU;kCAAkD;;;;;;kCAChE,8OAAC;wBAAE,WAAU;kCAAoE;;;;;;;;;;;;0BAInF,8OAAC;0BACC,cAAA,8OAAC,wKAAA,CAAA,UAAe;;;;;;;;;;;;;;;;AAIxB","debugId":null}}]
}